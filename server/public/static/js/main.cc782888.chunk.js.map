{"version":3,"sources":["components/Navbar/Navbar.js","words.js","components/Footer/Footer.js","store/actions/types.js","components/Input/Input.js","components/CheckoutForm/checkoutFunction.js","components/CheckoutForm/Checkout.js","store/actions/order.js","components/Cart/OrderModal.js","components/Cart/Cart.js","store/actions/cart.js","components/Filter/filterFunction.js","components/Filter/Filter.js","store/actions/products.js","components/Header/Header.js","components/Products/ProductModal.js","components/Products/Products.js","components/Home/Home.js","components/Orders/Orders.js","App.js","store/reducers/cartReducer.js","store/reducers/reducer.js","store/reducers/productsReducer.js","store/reducers/orderReducer.js","store/store.js","index.js"],"names":["Navbar","className","to","words","Footer","FETCH_PRODUCTS","FILTER_SIZE","FILTER_ORDER","ADD_TO_CART","REMOVE_FROM_CART","ADD_ORDER","REMOVE_ORDER","FETCH_ORDERS","Input","label","type","name","handleChange","required","onChange","setValue","e","prevValue","target","value","handlecheckout","addOrder","setIsOpen","preventDefault","order","email","connect","state","dispatch","a","fetch","method","headers","body","JSON","stringify","then","res","json","data","localStorage","clear","setShowForm","useState","onClick","onSubmit","productsCart","cart","cartItems","isOpen","onRequestClose","ariaHideApp","reduce","p","price","qty","map","title","removeProductCart","id","gatstate","cartProducts","newCartProducts","filter","product","_id","setItem","showForm","length","src","imageUrl","alt","acc","handleFilterBySize","filteredSize","products","handleFilterBySort","filteredSort","filteredProducts","filterProducts","size","sort","newProducts","sizes","includes","b","Header","ProductModal","desc","fetchProducts","addToCart","getState","cartProductClone","num","some","i","push","setProduct","productsItems","openModel","href","item","useEffect","Home","orders","fetchOrder","createdAt","slice","App","path","index","element","initialState","parse","getItem","combineReducers","action","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc782888.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./navbar.scss\"\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className='navbar'>\r\n        <nav>\r\n            <span>Shopping</span>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"orders\">Order</Link></li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\n","export const words =  {\n    headerTitle: 'Shopping Cart',\n    footerTitle: '© CopyRight Abdelhak Mehda @2022',\n    content: 'Content'\n}","import React from 'react'\r\nimport \"../../css/Footer/Footer.css\";\r\nimport {words} from \"../../words\"\r\n\r\nfunction Footer() {\r\n    return (\r\n    <footer> {words.footerTitle} </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FILTER_SIZE = \"FILTER_SIZE\";\r\nexport const FILTER_ORDER = \"FILTER_ORDER\";\r\n\r\n//Cart\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n\r\n\r\n// Order\r\nexport const ADD_ORDER = \"ADD_ORDER\";\r\nexport const REMOVE_ORDER = \"REMOVE_ORDER\";\r\nexport const FETCH_ORDERS = \"FETCH_ORDERS\";\r\n","import React from 'react'\r\n\r\nfunction Input({label,type,name,handleChange}) {\r\n  return (\r\n    <div>\r\n        <label >{label}</label>\r\n        <input type={type} required name={name} onChange={handleChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input","\r\nexport const handleChange = (setValue) => {\r\n        return (e) => {\r\n            setValue((prevValue) => (\r\n                { ...prevValue, [e.target.name]: e.target.value })\r\n            )\r\n    }\r\n    } \r\nexport const handlecheckout = (value, addOrder, setIsOpen) => {\r\n        return (e) => {\r\n            e.preventDefault();\r\n            const order = {\r\n                name: value.name,\r\n                email: value.email\r\n            }\r\n            addOrder(order)      \r\n            setIsOpen(true);\r\n        }\r\n    }","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addOrder } from \"../../store/actions/order\";\r\nimport \"../../css/CheckoutForm/checkout.css\"\r\nimport Input from '../Input/Input'\r\nimport { handleChange, handlecheckout } from './checkoutFunction';\r\n\r\nfunction Checkout({setShowForm,setIsOpen,addOrder}) {\r\n    const [value, setValue] = useState(\"\");\r\n  \r\n    return (\r\n    <>\r\n        {(\r\n            <div className=\"checkout-form\" >\r\n                <span className=\"close-icon\" onClick={()=>setShowForm(false) }>&times;</span>\r\n                <form onSubmit={ handlecheckout(value,addOrder,setIsOpen)}>\r\n                    <Input name={\"name\"} label ={\"Name\"} type={\"text\"} handleChange ={handleChange(setValue)} />\r\n                    <Input name={\"email\"} label ={\"Email\"} type={\"email\"} handleChange ={handleChange(setValue)} />\r\n                    <div>\r\n                    <button type=\"submit\">checkout</button>\r\n                    </div>\r\n                </form>\r\n            </div> \r\n        )}\r\n    </>\r\n)}\r\n\r\nexport default connect((state) => {\r\n    return {\r\n    \r\n    }\r\n},{addOrder})(Checkout)","import { ADD_ORDER, CLEAR_CART, FETCH_ORDERS} from \"./types\"\r\n\r\n\r\nexport const addOrder = (order) => {\r\n\r\nreturn async(dispatch) => {\r\n   await fetch('/api/orders', {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(order)\r\n    })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch({\r\n                type: ADD_ORDER,\r\n                data: {\r\n                    order: data\r\n                }\r\n            })\r\n        })\r\n        localStorage.clear('cartItems');\r\n        dispatch({type: CLEAR_CART})\r\n        \r\n       \r\n}\r\n}\r\n\r\nexport const fetchOrder = () => {\r\n    return async dispatch => {\r\n        await fetch('/api/orders')\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch({\r\n                    type: FETCH_ORDERS,\r\n                    data: {orders:data}\r\n                })\r\n            })\r\n        \r\n    }\r\n}","// import React, { useEffect } from 'react';\r\nimport Modal from \"react-modal\"\r\nimport { connect } from 'react-redux';\r\n\r\nconst OrderModal = ( {isOpen,order,productsCart,setIsOpen,setShowForm}) => {\r\n\r\n    return (\r\n        <Modal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} ariaHideApp={false} >\r\n            <span className='icon-times' onClick={() => { setIsOpen(false); setShowForm(false)}}>&times; </span>\r\n            \r\n            <div className=\"order-info\">\r\n                <p className=\"alert-success\"> Order Done  Success</p>\r\n                <table>\r\n                    <tr>\r\n                        <td>Name:</td>\r\n                        <td>{ order&&order.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email:</td>\r\n                        <td>{ order&&order.email}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total:</td>\r\n                        <td>${ order&&productsCart.reduce((a,p)=>p.price*p.qty+a,0)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Selected Products:</td>\r\n                        <td>{productsCart.map((p) => {\r\n                                return(<>\r\n                                <p>Product Name: {p.title} </p>\r\n                                <p>Quentity:{p.qty} </p>\r\n                            </>)\r\n                        })}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </Modal> \r\n)\r\n}\r\n\r\n\r\nexport default connect((state) => {\r\n    return {\r\n        productsCart: state.cart.cartItems,\r\n        order: state.order.order\r\n    }\r\n},{})(OrderModal)","import \"../../css/Cart/cart.css\"\r\nimport React, { useState } from 'react';\r\nimport Checkout from \"../CheckoutForm/Checkout\"\r\nimport { connect } from \"react-redux\";\r\nimport { removeProductCart } from \"../../store/actions/cart\";\r\nimport OrderModal from \"./OrderModal\";\r\n\r\nfunction Cart({ productsCart,removeProductCart }) {\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    \r\nreturn (\r\n    <div className=\"cart-wrapper\">\r\n        <div className=\"cart-title\">\r\n            <p>{productsCart.length? `you have ${productsCart.length} product${productsCart.length ===1?\"\":\"s\"} `: \"Your Cart is Empty\" } </p>\r\n        </div>\r\n        {/*Cart Modal */}\r\n        <OrderModal productsCart={productsCart} isOpen={isOpen} setIsOpen={setIsOpen} setShowForm={setShowForm}    />\r\n        {productsCart.map(product => (\r\n            <div key={product.id} className=\"cart-info\">\r\n            <img src={product.imageUrl} alt={product.title} />\r\n\r\n            <div className=\"cart-desc\">\r\n                <span>{ product.title}</span>    \r\n            <span>quntity : {product.qty} </span>    \r\n            <span>price : {product.price}$ </span>    \r\n            </div>\r\n            <button onClick={()=>removeProductCart(product._id,productsCart)}>Remove</button>\r\n\r\n        </div>\r\n        ))}\r\n        {productsCart.length > 0 && (\r\n            <div className=\"cart-footer\">\r\n            <div className=\"total\">Total : ${productsCart.reduce( (acc, p) => {\r\n                return acc + p.price*p.qty\r\n            }  , 0)} </div>\r\n                <button onClick={() => setShowForm(true)}> select products </button>\r\n        </div>\r\n        )}\r\n        {/* {checkout form} */}\r\n        {showForm && <Checkout\r\n            setIsOpen={setIsOpen}\r\n            showForm={showForm}\r\n            setShowForm={setShowForm}\r\n            productsCart={productsCart}\r\n        />}\r\n        \r\n    </div>\r\n)\r\n}\r\n\r\nexport default connect((state) => {\r\n    return {\r\n        productsCart: state.cart.cartItems,\r\n    }\r\n},{removeProductCart})(Cart)","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./types\";\r\n\r\n// ////////////////Add to Cart\r\nexport const addToCart = (product) => {    \r\n\r\n    \r\n    return (dispatch, getState) => {\r\n\r\n        const cartItems = getState().cart.cartItems;\r\n        const cartProductClone = [...cartItems];\r\n     \r\n        let num=0;\r\n        const checkproduct = cartProductClone.some(i =>i._id === product._id )\r\n        if (checkproduct) {\r\n            num = cartProductClone.filter(p => p._id === product._id)[0].qty++\r\n        } else {\r\n            num = 1;\r\n            cartProductClone.push({ ...product, qty: num })\r\n        }\r\n        dispatch({\r\n            type: ADD_TO_CART,\r\n            data: { cartItems: cartProductClone }\r\n        });\r\n        localStorage.setItem(\"cartItems\",JSON.stringify(cartProductClone))\r\n}\r\n}\r\n\r\n/////Remove Product  from Cart\r\nexport const removeProductCart = (id) => {\r\n    \r\n    return (dispatch, gatstate) => {\r\n\r\n        const cartProducts = gatstate().cart.cartItems;\r\n        let cartProductClone = [...cartProducts]\r\n        const newCartProducts = cartProductClone.filter(product => product._id !== id)\r\n\r\n        dispatch({\r\n            type: REMOVE_FROM_CART,\r\n            cartItems : newCartProducts\r\n        })\r\n    localStorage.setItem(\"cartItems\",JSON.stringify(newCartProducts))\r\n    }\r\n}\r\n\r\n///////////Clear products cart\r\n// export const clearCart = () => {\r\n//     return (dispatch) => {\r\n//         dispatch({\r\n//             type: CLEAR_CART\r\n//         })\r\n//     }\r\n// }","export const handleFilterBySize =(filteredSize,products)=> (e) => {\r\n    let value = e.target.value;\r\n    filteredSize(products, value);\r\n  }\r\n  export const handleFilterBySort =(filteredSort,filteredProducts)=> (e) => {\r\n    let value = e.target.value;\r\n    filteredSort(filteredProducts, value);\r\n  }","import { connect } from 'react-redux'\r\nimport \"../../css/Filter/Filter.css\"\r\nimport { filteredSort, filteredSize } from '../../store/actions/products'\r\nimport { handleFilterBySize, handleFilterBySort } from './filterFunction'\r\n\r\nfunction Filter({ filteredSort, filteredSize, filteredProducts, products, size, sort }) {\r\n  \r\n  return (\r\n    <>\r\n      {filteredProducts &&\r\n        <div className=\"filter-wrapper\">\r\n          <h2 className=\"filter-title\">Filter</h2>\r\n        <div className=\"products-Number\">Number of Products : {filteredProducts.length} </div>\r\n            <div className=\"filter-by-size\">\r\n              <span>Filter</span>\r\n                <select value={size}  onChange={  handleFilterBySize (filteredSize,products)} className=\"filter-select\">\r\n                  <option value=\"ALL\">ALL</option>\r\n                  <option value=\"XS\">XS</option>\r\n                  <option value=\"S\">S</option>\r\n                  <option value=\"M\">M</option>\r\n                  <option value=\"L\">L</option>\r\n                  <option value=\"XL\">XL</option>\r\n                  <option value=\"XXL\">XXL</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"filter-by-sort\">\r\n              <span>Order</span>\r\n                <select  value={sort} onChange={handleFilterBySort(filteredSort,filteredProducts)} className=\"filter-select\">\r\n                  <option value=\"latest\" >Latest</option>\r\n                  <option value=\"lowest\">Lowest</option>\r\n                  <option value=\"highest\">Highest</option>\r\n                  \r\n                </select>\r\n            </div>\r\n        \r\n    </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default connect((state) => {\r\n  return {\r\n    products: state.products.products,\r\n    filteredProducts: state.products.filterProducts,\r\n    size: state.products.size,\r\n    sort: state.products.sort,\r\n  }\r\n},{filteredSize,filteredSort})(Filter)","import {  FETCH_PRODUCTS, FILTER_ORDER, FILTER_SIZE } from \"./types\"\r\n\r\n/////////////Fetch Products\r\n\r\nexport const fetchProducts = () => {\r\n    return dispatch => {\r\n        fetch(\"/api/products\")\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                dispatch({\r\n                    type: FETCH_PRODUCTS,\r\n                    data: data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n/////////////////////// Filter By Order\r\nexport const filteredSort = (products, value) => {\r\n        \r\n    return dispatch => {\r\n    const cloneProducts = [...products];\r\n    let newProducts = cloneProducts.sort((a, b) => {\r\n        if (value === \"lowest\") {\r\n        return  a.price - b.price\r\n        } else if (value === \"highest\") {\r\n        return b.price - a.price    \r\n        }  else{\r\n        return a.id < b.id ? 1 : -1\r\n        }\r\n    });\r\n    dispatch({\r\n        type: FILTER_ORDER,\r\n        data: {\r\n            sort: value,\r\n            products: newProducts\r\n        }\r\n    })\r\n    }\r\n\r\n}\r\n/////////////Filter By Size\r\n\r\nexport const filteredSize = (products, value) => {\r\n    return dispatch => {\r\n        let newProducts = products.filter(p => p.sizes.includes(value))\r\n        dispatch({\r\n            type: FILTER_SIZE,\r\n            data: {\r\n                size: value,\r\n                products: value === \"ALL\"? products:newProducts\r\n            }\r\n        })\r\n    }   \r\n}\r\n","import React from 'react'\r\nimport \"../../css/Header/header.css\"\r\nimport {words} from \"../../words\"\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      {words.headerTitle}\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport Modal from 'react-modal'\r\n\r\nfunction ProductModal({isOpen,setIsOpen,product}) {\r\n  return (\r\n    <Modal  isOpen={isOpen} onRequestClose={()=>setIsOpen(false)} className=\"model-product\" ariaHideApp={false}>\r\n        <span className='icon-times' onClick={()=>setIsOpen(false)}>&times; </span>\r\n        <div className=\"product-info\">\r\n            <img src={product.imageUrl} alt={product.title} />\r\n            <p>{product.title }</p>\r\n            <p>{product.desc }</p>\r\n            <p>${product.price }</p>\r\n        </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ProductModal","import React, { useEffect, useState } from 'react';\r\nimport \"../../css/Products/Products.css\";\r\nimport ProductModal from './ProductModal';\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProducts } from '../../store/actions/products';\r\nimport { addToCart } from '../../store/actions/cart';\r\n\r\n        \r\nfunction Products({fetchProducts,addToCart, products}) {\r\n    const [product, setProduct] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const openModel = (product) => {\r\n        setProduct(product)\r\n        setIsOpen(true)\r\n    };\r\n\r\n\r\n    ////////// render Products\r\nconst productsItems = products?products.length===0?(<h4>ther is no Productions</h4>): products.map(product => (    \r\n    <div key={product.id} className=\"product-item\">\r\n        <a onClick={() => { openModel(product) }} href=\"#\">\r\n            <img src={product.imageUrl} alt={product.item} />\r\n        </a>\r\n        <div className=\"product-desc\">\r\n            <p>{product.title}</p>\r\n            <span>{product.price}$</span>\r\n        </div>\r\n        <button onClick={() => addToCart(product)}>Add to Cart</button>\r\n    </div>\r\n\r\n)):\"Loading\";\r\n\r\nuseEffect(() => {\r\n    fetchProducts()\r\n},[])\r\n    return (\r\n        <div className=\"products-wrapper\"> \r\n            { productsItems}\r\n            <ProductModal product={product} isOpen={isOpen} setIsOpen ={setIsOpen} />\r\n            </div>\r\n    \r\n            \r\n  )\r\n}\r\n\r\nexport default connect((state) => {\r\n    return {\r\n        products: state.products.filterProducts\r\n    }\r\n},{fetchProducts,addToCart})(Products)","import React from 'react'\r\nimport Cart from '../Cart/Cart'\r\nimport Filter from '../Filter/Filter'\r\nimport Footer from '../Footer/Footer'\r\nimport Header from '../Header/Header'\r\nimport Products from '../Products/Products'\r\n\r\nconst Home = () => {\r\n  return (\r\n      <>\r\n        \r\n          <Header/>\r\n          <main>\r\n            <div className=\"wrapper\">\r\n                <Products />\r\n                <Filter/>\r\n            </div>\r\n            <Cart />\r\n          </main>\r\n          {/* <Footer /> */}\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { fetchOrder } from \"../../store/actions/order\";\r\nimport '../../css/Orders/orders.css'\r\n    \r\n    const Orders = ({ orders ,fetchOrder}) => {\r\n    useEffect(()=>fetchOrder(),[])\r\n\r\nreturn (\r\n    <div className='orders' >\r\n        {orders && true ? (\r\n            orders.length === 0 ? <p>There is no Orders </p> : (\r\n                      \r\n                        <table>\r\n                            <tr >\r\n                                <th>Name </th>\r\n                                <th>Email </th>\r\n                                <th>Date </th>\r\n                            </tr>\r\n                            {orders.map((order) => {\r\n                                return (\r\n                                        <tr>\r\n                                            <td>{order.name}</td>\r\n                                            <td>{order.email}</td>\r\n                                            <td>{order.createdAt.slice(0,10)}</td>\r\n                                        </tr>\r\n                                )\r\n                            })}\r\n                            </table>\r\n\r\n                           \r\n              )\r\n          ) : <p>Loading</p>\r\n          }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect((state) => {\r\n    return {\r\n    orders: state.order.orders\r\n    }\r\n}, { fetchOrder })(Orders)\r\n","import {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n// import Cart from './components/Cart/Cart';\r\n// import Filter from './components/Filter/Filter';\r\n// import Header from \"./components/Header/Header\";\r\n// import Products from './components/Products/Products';\r\n// import { Provider } from \"react-redux\";\r\n// import store from './store/store';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Orders from \"./components/Orders/Orders\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    \r\n      <BrowserRouter>\r\n        <Navbar />\r\n        <div className=\"layout\">\r\n        <Routes>\r\n        <Route path=\"/\" >\r\n              <Route index element={<Home />} />\r\n              <Route path=\"orders\" element={< Orders/>}/>\r\n        </Route>\r\n        </Routes>\r\n        <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/types\"\r\nconst initialState = {\r\n    cartItems: JSON.parse(localStorage.getItem('cartItems')) || []\r\n}\r\nexport const cartReducer = (state= initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ADD_TO_CART:   \r\n        return {\r\n            cartItems: action.data.cartItems\r\n        }   \r\n        case REMOVE_FROM_CART:   \r\n        return {\r\n            cartItems: action.cartItems\r\n        }   \r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","\r\nimport { combineReducers } from 'redux'\r\nimport { cartReducer } from './cartReducer'\r\nimport { orderReducer } from './orderReducer'\r\nimport { productsReducer } from './productsReducer'\r\n\r\nexport default combineReducers({\r\n    products: productsReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer\r\n})\r\n\r\n","import { FETCH_PRODUCTS, FILTER_SIZE, FILTER_ORDER } from \"../actions/types\";\r\n\r\nexport const productsReducer = (state= {}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_PRODUCTS:\r\n            return {products: action.data, filterProducts: action.data} \r\n        \r\n        case FILTER_SIZE: \r\n            return {\r\n                ...state,\r\n                size: action.data.size,\r\n                filterProducts: action.data.products\r\n            }   \r\n            \r\n        case FILTER_ORDER: \r\n        return {\r\n            ...state,\r\n            sort: action.data.sort,\r\n            filterProducts: action.data.products\r\n        }   \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { ADD_ORDER, FETCH_ORDERS, REMOVE_ORDER } from \"../actions/types\";\r\n\r\nexport const orderReducer = (state={}, action) => {\r\n    switch (action.type) {\r\n        case ADD_ORDER:\r\n            return {order: action.data.order}\r\n        case REMOVE_ORDER:\r\n            return {order: false}\r\n        case FETCH_ORDERS:\r\n            return {orders: action.data.orders}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore,applyMiddleware,compose } from \"redux\";\r\nimport reducer from \"./reducers/reducer\";\r\nimport reduxThunk from \"redux-thunk\"\r\nconst initState = {}\r\nconst enhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initState, enhancer(applyMiddleware(reduxThunk)));\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App />\r\n  </Provider>\r\n\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}